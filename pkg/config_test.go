package benthosx

import (
	"testing"

	"github.com/Jeffail/benthos/lib/output"
	"github.com/stretchr/testify/require"
)

// This configuration is copied from
// https://github.com/Jeffail/benthos/blob/master/config/stdout.yaml
var stdoutYaml = `# This file was auto generated by benthos_config_gen.
http:
  address: 0.0.0.0:4195
  read_timeout: 5s
  root_path: /benthos
  debug_endpoints: false
input:
  type: stdin
  stdin:
    delimiter: ""
    max_buffer: 1e+06
    multipart: false
buffer:
  type: none
  none: {}
pipeline:
  processors: []
  threads: 1
output:
  type: stdout
  stdout:
    delimiter: ""
resources:
  caches: {}
  conditions: {}
  rate_limits: {}
logger:
  prefix: benthos
  level: INFO
  add_timestamp: true
  json_format: true
  static_fields:
    '@service': benthos
metrics:
  type: http_server
  http_server: {}
  prefix: benthos
tracer:
  type: none
  none: {}
shutdown_timeout: 20s
`

var onelineYaml = `# This file was auto generated by benthos_config_gen.\nhttp:\n  address: 0.0.0.0:4195\n  read_timeout: 5s\n  root_path: /benthos\n  debug_endpoints: false\ninput:\n  type: stdin\n  stdin:\n    delimiter: \"\"\n    max_buffer: 1e+06\n    multipart: false\nbuffer:\n  type: none\n  none: {}\npipeline:\n  processors: []\n  threads: 1\noutput:\n  type: stdout\n  stdout:\n    delimiter: \"\"\nresources:\n  caches: {}\n  conditions: {}\n  rate_limits: {}\nlogger:\n  prefix: benthos\n  level: INFO\n  add_timestamp: true\n  json_format: true\n  static_fields:\n    '@service': benthos\nmetrics:\n  type: http_server\n  http_server: {}\n  prefix: benthos\ntracer:\n  type: none\n  none: {}\nshutdown_timeout: 20s\n`

func TestConfig(t *testing.T) {
	conf, err := NewConfig([]byte(stdoutYaml))
	require.NoError(t, err)
	require.Equal(t, output.TypeSTDOUT, conf.Output.Type)

	conf, err = NewConfig([]byte(onelineYaml))
	require.NoError(t, err)
	require.Equal(t, output.TypeSTDOUT, conf.Output.Type)
}
